/**
 @mainpage Host-VC02 Driver Public API

This document describes the public API to the Host-VC02 driver that
provides access to the Host-VC02 interface.  Although this
interface is a rather sophisticated piece of code a full description of which
is beyond the scope of this document, a knowledge of its basic facilities
is helpful as it provides a rationale for the features offered by the
driver.  So, in brief, the Host-VC02 interface provides:

-# A General Command Service. The command service allows the Host to send
commands to the VC02 (e.g. to instruct the VC02 to power up peripherals, load
multimedia applications, shut them down, etc.) and receive responses.
-# A Frame Forwarding Service. Using this service the Host can exchange video
data with the VC02 (needed during a video call) or audio data (needed during
multimedia playback or record).
-# A Display Manager Service. The display device is attached to the VC02 and
the Display Manager Service allows the Host to draw to the display.
-# A File Service. This service allows the Host to access file
systems that are attached to VC02 (e.g. the SD card). It also gives VC02
access to filesystems attached to the Host.
-# A Host Request Service. Using this service VC02 can make requests of the
Host or send asynchronous notifications to it. For example, the VC02 may
require some data from within the host memory that it cannot read directly.

The above overview of the facilities offered by the Host-VC02 interface
should provide useful background information for understanding the driver
public API which consists of the following:

- A kernel-mode API provided by the \ref funcIface
- A user-mode API provided by the \ref ioctlIface
- A proc file system interface provided by \ref procIface

Details of the API can be found by following the links above.  For a quick
"how to" tour of the main features, see below:

- If you want to send commands to the VC02 then either call function
#vc_gencmd (from kernel mode) or issue #VC_IOCTL_GENCMD (from user mode)
- If you want to send frames of video data to the VC02, or receive frames of
video data from the VC02, you need to register callback functions with the
driver.  To do this see function #vc_host_set_cmd_callback and its associated
data structures.
- For recording/playback of video clips you may want audio to be routed via
the ADC/DAC on the Host processor.  In order to set up, or tear down, an audio
connection between the VC02 and the Host audio mixer issue
#VC_IOCTL_START_AUDIO or #VC_IOCTL_STOP_AUDIO

 @section note_to_reader A Note to the Reader

This document has been generated by Doxygen, an industry-standard API
documentation tool.  Those unfamiliar with Doxygen may get confused by what
seems to be excessive redundancy in the document.  It may help to know that
by default Doxygen automatically generates:

- A section of File documentation that essentially lists all the data
structures, defines, functions and variables that make up the API
- A section of Data Structure documentation that contains detailed
descriptions of the various API data structures
- Various indices

On top of this are various Modules that describe the various
different logical parts of the API.  It is worth bearing this in mind if you
find yourself becoming bewildered with what may appear to be an excess of
redundant documentation.

*/

/**
 @defgroup funcIface Function Interface

 @brief   The Function Interface provides the Host-VC02 driver kernel-mode
          API

*/

/**
 @defgroup ioctlIface IOCTL Interface

 @brief   The IOCTL Interface provides the Host-VC02 driver user-mode API

The IOCTL interface essentially provides a user-mode interface to the
kernel-mode function interface, so familiarity with the functions described
in the \ref funcIface is useful in order to understand the user-mode interface.
For details on the available IOCTLs click on this link #VC_IOCTL_INIT

*/

/**
 @defgroup procIface proc Interface

The proc interface to the driver, provided by files in /proc/sys/vc/, is
summmarized in the table below.  Some files are read-only (r) and provide
information on the state on various driver internals whilst others are
read-write (rw) and allow the user to either set variables that control driver
behaviour or reset statistics counters.

@verbatim
        File               Mode                     Comment
addressing-mode            (r)   Host-VC02 address line setup that has been
                                 detected
debug-display-region       (rw)  Not used
debug-frame-loopback       (rw)  Not used
debug-host-irq             (rw)  When set, interface Host irq debug messages
                                 get printed to the console
debug-info                 (rw)  When set, interface info debug messages get
                                 printed to the console
debug-msgfifo              (rw)  When set, interface msg fifo debug messages
                                 get printed to the console
debug-read                 (rw)  When set, vc_host_read_...() functions print
                                 read data to the console
debug-trace                (rw)  When set, interface trace debug messages get
                                 printed to the console
debug-verbose              (rw)  When set, interface verbose debug messages get
                                 printed to the console
debug-write                (rw)  When set, vc_host_write_...() functions print
                                 written data to the console
display-stats              (rw)  When set, debug info is written to the console
                                 on every display update sent to the VC02
egress-queue-ave-frames    (rw)  Average number of frames in the Host-to-VC02
                                 packet queue
egress-queue-curr-frames   (rw)  Current number of frames in the Host-to-VC02
                                 packet queue
egress-queue-max-frames    (rw)  Peak number of frames in the Host-to-VC02
                                 packet queue
error_periodlen            (rw)  Driver error printout period (in secs)
error_prtenable            (rw)  When set, driver errors are printed to the
                                 console on a periodic basis
errprt_perperiod           (rw)  Maximum number of errors printed per driver
                                 error printout period
frames-acked               (rw)  Number of affirmative acknowledgements
                                 received from the VC02 for video frames sent
                                 to it
frames-looped              (rw)  Not used
frames-lost                (rw)  Number of video frames that could not be sent
                                 to the VC02 due to a lack resources at the
                                 driver layer
frames-naked               (rw)  Not used
frames-rcvd                (rw)  Number of video frames received by the Host
                                 from the VC02
frames-send-err            (rw)  Number of video frames that could not sent to
                                 the VC02 due to a lack resources at the
                                 frame-forward interface layer
frames-sent                (rw)  Number of video frames sent by the Host to
                                 the VC02
frmfwd-checksum-enabled    (rw)  When set, checksums are included in frames
                                 sent at the frame-forward interface layer to
                                 the VC02
frmfwd-rcvd-checksum-bad   (rw)  Number of corrupt frames (that have checksums)
                                 received at the frame-forward interface layer
                                 from the VC02
frmfwd-rcvd-checksum-good  (rw)  Number of good frames (that have checksums)
                                 received at the frame-forward interface layer
                                 from the VC02
frmfwd-rcvd-no-checksum    (rw)  Number of frames (that have no checksums)
                                 received at the frame-forward interface layer
                                 from the VC02
frmfwd-sent-checksum       (rw)  Number of frames (that have checksums) sent at
                                 the frame-forward interface layer to the VC02
frmfwd-sent-no-checksum    (rw)  Number of frames (that have no checksums) sent
                                 at the frame-forward interface layer to the
                                 VC02
gmt-offset                 (rw)  The GMT offset (in secs)
hostport-rled              (rw)  Host port HCS0 read strobe leading (falling)
                                 edge asymmetric deglitch/delay tap select
hostport-wled              (rw)  Host port HCS0 write strobe leading (falling)
                                 edge asymmetric deglitch/delay tap select
knllog-profile             (rw)  When set, enables writing of debug info to the
                                 knllog
loopback-delay             (rw)  Number added to the frame timestamps of
                                 looped-back packets
priority-hostreq           (rw)  Thread priority of the HostReqThread thread
priority-irq               (rw)  Thread priority of the vc_irq_task task
priority-readVCregs        (rw)  Thread priority of the ReadVCRegisters thread
priority-recv              (rw)  Thread priority of the FrameReceiveThread
priority-send              (rw)  Thread priority of the FrameSendThread
use-32-bit-io              (rw)  When set, enables 32-bit (as opposed to
                                 16-bit) Host-VC02 transfers (only takes affect
                                 if not use-dma and can only be set with
                                 A6,A7,A8 addressing-mode)
use-dma                    (rw)  When set, enables dma on Host-VC02 transfers
use-fast-xfer              (rw)  When set, Host-VC02 transfers are done a fifo
                                 at a time rather than a word at a time (only
                                 takes affect if not use-dma)
use-irq                    (r)   Specifies if interrupts are used for Host-VC02
                                 transfers
vc-code-check-crcs         (rw)  Whenever this proc entry is read or written a
                                 CRC check is performed on the VC02 code
                                 segments
@endverbatim

*/

