/*****************************************************************************
* Copyright 2004 - 2008 Broadcom Corporation.  All rights reserved.
*
* Unless you and Broadcom execute a separate written software license
* agreement governing use of this software, this software is licensed to you
* under the terms of the GNU General Public License version 2, available at
* http://www.broadcom.com/licenses/GPLv2.php (the "GPL"). 
*
* Notwithstanding the above, under no circumstances may you combine this
* software in any way with any other Broadcom software provided under a
* license other than the GPL, without Broadcom's express prior written
* consent.
*****************************************************************************/




/*
*
*****************************************************************************
*
*  device.h
*
*  PURPOSE:
*  
*  This file contains data structures used in the file generated by Microwin
*  utility, convbmp.  It also defines macros for converting the 24-bit color
*  palette to Truecolor-565 format color for BCM116x LCD controller.
*
*  NOTES:
*
*****************************************************************************/


#ifndef _DEVICE_H_
#define _DEVICE_H_

/* Pack palette to 16-bit TRUECOLOR565 format (5-red, 6-blue, 5-green) bits per pixel */
#define LCD_RED(red)      ((((red) >> 3) & 0x1f) << 11)
#define LCD_GREEN(green)  ((((green) >> 2) & 0x3f) << 5)
#define LCD_BLUE(blue)    (((blue) >> 3) & 0x1f)

#define RGBDEF( r, g, b )  (LCD_RED(r) | LCD_GREEN(g) | LCD_BLUE(b))

/* Custom typedefs optimized for 8-bpp bitmap */
typedef const unsigned char MWUCHAR;
typedef const unsigned short MWPALENTRY;

typedef const struct
{
	int width;					/* image width in pixels */
	int height;					/* image height in pixels */
	int planes;					/* # image planes */
	int bpp;					/* bits per pixel (1, 4 or 8) */
	int pitch;					/* bytes per line */
	int bytesperpixel;			/* bytes per pixel */
	int compression;			/* compression algorithm */
	int palsize;				/* palette size */
	long transcolor;			/* transparent color or -1 if none */
	MWPALENTRY *palette;		/* palette */
	MWUCHAR *imagebits;			/* image bits (right aligned) */
} MWIMAGEHDR;


#endif
